version: 2.1
jobs:
  lint:
    docker:
      - image: cimg/ruby:3.1.5
    working_directory: ~/safer_rails_console
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-gems-ruby-3.1.5-{{ checksum "safer_rails_console.gemspec" }}-{{ checksum "Gemfile" }}
            - v2-gems-ruby-3.1.5-
      - run:
          name: Install Gems
          command: |
            if ! bundle check --path=vendor/bundle; then
              bundle install --path=vendor/bundle --jobs=4 --retry=3
              bundle clean
            fi
      - save_cache:
          key: v2-gems-ruby-3.1.5-{{ checksum "safer_rails_console.gemspec" }}-{{ checksum "Gemfile" }}
          paths:
            - "vendor/bundle"
            - "gemfiles/vendor/bundle"
      - run:
          name: Run Rubocop
          command: bundle exec rubocop
  test:
    parameters:
      ruby_version:
        type: string
      gemfile:
        type: string
    docker:
      - image: cimg/ruby:<< parameters.ruby_version >>
        environment:
          CIRCLE_TEST_REPORTS: "test-results"
          BUNDLE_GEMFILE: "/home/circleci/safer_rails_console/<< parameters.gemfile >>"
      - image: cimg/postgres:14.7
        environment:
          POSTGRES_USER: "circleci"
          POSTGRES_DB: "safer_rails_console_test"
          POSTGRES_HOST_AUTH_METHOD: "trust"
      - image: cimg/mysql:8.0
        environment:
          MYSQL_DATABASE: "safer_rails_console_test"
          MYSQL_ROOT_HOST: "%"
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    working_directory: ~/safer_rails_console
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-gems-ruby-<< parameters.ruby_version >>-{{ checksum "safer_rails_console.gemspec" }}-{{ checksum "<< parameters.gemfile >>" }}
            - v2-gems-ruby-<< parameters.ruby_version >>-
      - run:
          name: Install Gems
          command: |
            if ! bundle check --path=vendor/bundle; then
              bundle install --path=vendor/bundle --jobs=4 --retry=3
              bundle clean
            fi
      - save_cache:
          key: v2-gems-ruby-<< parameters.ruby_version >>-{{ checksum "safer_rails_console.gemspec" }}-{{ checksum "<< parameters.gemfile >>" }}
          paths:
            - "vendor/bundle"
            - "gemfiles/vendor/bundle"
      - run:
          name: Wait for Mysql
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Run Tests
          command: |
            bundle exec rspec --format RspecJunitFormatter --out $CIRCLE_TEST_REPORTS/rspec/junit.xml --format progress spec
      - store_test_results:
          path: "test-results"
workflows:
  build:
    jobs:
      - lint
      - test:
          matrix:
            parameters:
              gemfile:
                - gemfiles/7.0.gemfile
                - gemfiles/7.1.gemfile
                - gemfiles/7.2.gemfile
                - gemfiles/8.0.gemfile
              ruby_version:
                - 3.1.5
                - 3.2.4
                - 3.3.4
            exclude:
              - gemfile: gemfiles/rails_8.0.gemfile
                ruby_version: 3.1.5